/usr/bin/python /Users/LT/Documents/Uni/Siemens/increOCSVM/evaluation_tmp.py
mnist classes = 2
size: 2000
(1048,)
(952,)
data size: 2000, nu: 0.5, gamma: 10
============ 1. Fold of CV ============
1) Incremental OCSVM
0 data points processed
None
Confusion matrix:
Prediction   -1    1
Target              
-1          509  539
 1          467  485
precision: 0.4736328125, recall: 0.509453781513, f1-score: 0.490890688259
Number of support vectors: 1600
-----------
2) cvxopt-OCSVM
Confusion matrix:
Prediction   -1    1
Target              
-1          824  224
 1          776  176
precision: 0.44, recall: 0.18487394958, f1-score: 0.260355029586
Number of support vectors: 1600
---------
3) sklearn-OCSVM
Confusion matrix:
Prediction     1
Target          
-1          1048
 1           952
Number of support vectors: 1600
precision: 0.476, recall: 1.0, f1-score: 0.644986449864
========================================
Average Incremental OCSVM results:
precision: 0.4736328125, recall: 0.509453781513, f1-score: 0.490890688259
Average cvxopt-OCSVM results:
precision: 0.44, recall: 0.18487394958, f1-score: 0.260355029586
Average sklearn-OCSVM results:
precision: 0.476, recall: 1.0, f1-score: 0.644986449864

*** PROFILER RESULTS ***
incremental_ocsvm (/Users/LT/Documents/Uni/Siemens/increOCSVM/evaluation_tmp.py:185)
function called 1 times

         24734 function calls in 120.000 seconds

   Ordered by: cumulative time, internal time, call count
   List reduced from 134 to 40 due to restriction <40>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.018    0.018  120.000  120.000 evaluation_tmp.py:185(incremental_ocsvm)
        1  107.413  107.413  119.299  119.299 ocsvm.py:98(increment)
      757    4.469    0.006    4.484    0.006 numeric.py:966(outer)
     4544    2.835    0.001    2.835    0.001 {method 'dot' of 'numpy.ndarray' objects}
      762    2.194    0.003    2.194    0.003 {numpy.core.multiarray.zeros}
        1    1.903    1.903    1.905    1.905 linalg.py:454(inv)
        1    0.010    0.010    0.683    0.683 ocsvm.py:35(fit)
        1    0.050    0.050    0.673    0.673 ocsvm.py:62(alpha)
        1    0.002    0.002    0.572    0.572 coneprog.py:4159(qp)
        1    0.003    0.003    0.570    0.570 coneprog.py:1441(coneqp)
        5    0.000    0.000    0.517    0.103 coneprog.py:1984(kktsolver)
        5    0.021    0.004    0.517    0.103 misc.py:1389(factor)
        5    0.253    0.051    0.253    0.051 {cvxopt.base.syrk}
        2    0.000    0.000    0.189    0.095 ocsvm.py:58(gram)
        2    0.000    0.000    0.189    0.095 pairwise.py:1164(pairwise_kernels)
        2    0.004    0.002    0.189    0.095 pairwise.py:949(_parallel_pairwise)
        2    0.024    0.012    0.185    0.093 pairwise.py:740(rbf_kernel)
        5    0.180    0.036    0.180    0.036 {cvxopt.base.gemm}
        2    0.026    0.013    0.157    0.078 pairwise.py:136(euclidean_distances)
     1527    0.152    0.000    0.152    0.000 {min}
        2    0.000    0.000    0.127    0.063 extmath.py:171(safe_sparse_dot)
        2    0.127    0.063    0.127    0.063 {numpy.core._dotblas.dot}
        1    0.083    0.083    0.110    0.110 ocsvm.py:45(rho)
       10    0.056    0.006    0.056    0.006 {cvxopt.lapack.potrf}
     2276    0.014    0.000    0.056    0.000 numeric.py:136(ones)
       56    0.031    0.001    0.031    0.001 {cvxopt.base.gemv}
        9    0.000    0.000    0.031    0.003 misc.py:1489(solve)
        8    0.000    0.000    0.028    0.004 coneprog.py:2333(f4)
        8    0.000    0.000    0.028    0.004 coneprog.py:2291(f4_no_ir)
     2276    0.025    0.000    0.025    0.000 {numpy.core.multiarray.copyto}
        1    0.021    0.021    0.022    0.022 data.py:29(Xs)
     2279    0.018    0.000    0.018    0.000 {numpy.core.multiarray.empty}
     1518    0.005    0.000    0.011    0.000 numeric.py:392(asarray)
       10    0.000    0.000    0.009    0.001 coneprog.py:1900(fG)
       10    0.000    0.000    0.009    0.001 misc.py:801(sgemv)
     1539    0.008    0.000    0.008    0.000 {numpy.core.multiarray.array}
     1514    0.008    0.000    0.008    0.000 {numpy.core.multiarray.where}
       18    0.008    0.000    0.008    0.000 {cvxopt.blas.trsv}
        4    0.000    0.000    0.007    0.002 pairwise.py:57(check_pairwise_arrays)
        4    0.000    0.000    0.007    0.002 validation.py:268(check_array)



*** PROFILER RESULTS ***
cvxopt_ocsvm (/Users/LT/Documents/Uni/Siemens/increOCSVM/evaluation_tmp.py:181)
function called 1 times

         1201 function calls in 4.092 seconds

   Ordered by: cumulative time, internal time, call count
   List reduced from 117 to 40 due to restriction <40>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    4.092    4.092 evaluation_tmp.py:181(cvxopt_ocsvm)
        1    0.022    0.022    4.092    4.092 ocsvm.py:35(fit)
        1    0.261    0.261    3.828    3.828 ocsvm.py:62(alpha)
        1    0.006    0.006    3.286    3.286 coneprog.py:4159(qp)
        1    0.002    0.002    3.279    3.279 coneprog.py:1441(coneqp)
        5    0.000    0.000    3.144    0.629 coneprog.py:1984(kktsolver)
        5    0.073    0.015    3.144    0.629 misc.py:1389(factor)
        5    1.719    0.344    1.719    0.344 {cvxopt.base.syrk}
        5    1.013    0.203    1.013    0.203 {cvxopt.base.gemm}
        2    0.000    0.000    0.428    0.214 ocsvm.py:58(gram)
        2    0.000    0.000    0.428    0.214 pairwise.py:1164(pairwise_kernels)
        2    0.006    0.003    0.428    0.214 pairwise.py:949(_parallel_pairwise)
        2    0.059    0.030    0.422    0.211 pairwise.py:740(rbf_kernel)
        2    0.058    0.029    0.343    0.172 pairwise.py:136(euclidean_distances)
       10    0.321    0.032    0.321    0.032 {cvxopt.lapack.potrf}
        2    0.000    0.000    0.275    0.137 extmath.py:171(safe_sparse_dot)
        2    0.275    0.137    0.275    0.137 {numpy.core._dotblas.dot}
        1    0.004    0.004    0.242    0.242 ocsvm.py:45(rho)
       56    0.105    0.002    0.105    0.002 {cvxopt.base.gemv}
        9    0.000    0.000    0.081    0.009 misc.py:1489(solve)
        8    0.000    0.000    0.074    0.009 coneprog.py:2333(f4)
        8    0.000    0.000    0.074    0.009 coneprog.py:2291(f4_no_ir)
       10    0.000    0.000    0.041    0.004 coneprog.py:1900(fG)
       10    0.000    0.000    0.041    0.004 misc.py:801(sgemv)
        2    0.000    0.000    0.038    0.019 shape_base.py:179(vstack)
        2    0.037    0.019    0.037    0.019 {numpy.core.multiarray.concatenate}
        2    0.034    0.017    0.034    0.017 data.py:29(Xs)
        4    0.000    0.000    0.027    0.007 pairwise.py:57(check_pairwise_arrays)
        6    0.000    0.000    0.027    0.004 validation.py:268(check_array)
       18    0.016    0.001    0.016    0.001 {cvxopt.blas.trsv}
        2    0.000    0.000    0.015    0.008 twodim_base.py:221(diag)
       30    0.014    0.000    0.015    0.000 {numpy.core.multiarray.array}
        4    0.015    0.004    0.015    0.004 {numpy.core.multiarray.zeros}
        5    0.015    0.003    0.015    0.003 {cvxopt.blas.trsm}
        6    0.000    0.000    0.012    0.002 validation.py:43(_assert_all_finite)
       11    0.012    0.001    0.012    0.001 {method 'reduce' of 'numpy.ufunc' objects}
        6    0.000    0.000    0.012    0.002 {method 'sum' of 'numpy.ndarray' objects}
        6    0.000    0.000    0.012    0.002 _methods.py:23(_sum)
        5    0.000    0.000    0.006    0.001 coneprog.py:1847(fP)
        5    0.006    0.001    0.006    0.001 {cvxopt.base.symv}



*** PROFILER RESULTS ***
sklearn_ocsvm (/Users/LT/Documents/Uni/Siemens/increOCSVM/evaluation_tmp.py:177)
function called 1 times

         57 function calls in 2.683 seconds

   Ordered by: cumulative time, internal time, call count

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    2.683    2.683 evaluation_tmp.py:177(sklearn_ocsvm)
        1    0.001    0.001    2.683    2.683 classes.py:941(fit)
        1    0.000    0.000    2.682    2.682 base.py:99(fit)
        1    0.000    0.000    2.668    2.668 base.py:211(_dense_fit)
        1    2.667    2.667    2.667    2.667 {sklearn.svm.libsvm.fit}
        1    0.009    0.009    0.009    0.009 {method 'randint' of 'mtrand.RandomState' objects}
        1    0.000    0.000    0.004    0.004 validation.py:268(check_array)
        5    0.003    0.001    0.003    0.001 {numpy.core.multiarray.array}
        1    0.000    0.000    0.001    0.001 validation.py:43(_assert_all_finite)
        1    0.000    0.000    0.001    0.001 {method 'sum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.001    0.001 _methods.py:23(_sum)
        1    0.001    0.001    0.001    0.001 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.001    0.001    0.001    0.001 {sklearn.svm.libsvm.set_verbosity_wrap}
        1    0.000    0.000    0.000    0.000 shape_base.py:60(atleast_2d)
        1    0.000    0.000    0.000    0.000 numeric.py:136(ones)
        1    0.000    0.000    0.000    0.000 validation.py:126(_shape_repr)
        1    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 base.py:193(_validate_targets)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}
        1    0.000    0.000    0.000    0.000 getlimits.py:244(__init__)
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
        2    0.000    0.000    0.000    0.000 numeric.py:462(asanyarray)
        3    0.000    0.000    0.000    0.000 validation.py:153(<genexpr>)
        1    0.000    0.000    0.000    0.000 base.py:203(_warn_from_fit_status)
        2    0.000    0.000    0.000    0.000 numeric.py:392(asarray)
        1    0.000    0.000    0.000    0.000 getlimits.py:269(max)
        1    0.000    0.000    0.000    0.000 validation.py:105(_num_samples)
        1    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 base.py:702(isspmatrix)
        6    0.000    0.000    0.000    0.000 {len}
        3    0.000    0.000    0.000    0.000 {hasattr}
        3    0.000    0.000    0.000    0.000 {isinstance}
        1    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {callable}
        1    0.000    0.000    0.000    0.000 validation.py:503(check_random_state)
        1    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        0    0.000             0.000          profile:0(profiler)



Process finished with exit code 0
