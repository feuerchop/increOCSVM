/usr/bin/python /Users/LT/Documents/Uni/MA/increOCSVM/evaluation_tmp.py
data size: 768, nu: 0.1, gamma: 1
============ 1. Fold of CV ============
1) Incremental OCSVM
None
Confusion matrix:
Prediction   -1   1
Target             
-1          449  51
 1          236  32
precision: 0.385542168675, recall: 0.119402985075, f1-score: 0.182336182336
Number of support vectors: 2
-----------
2) cvxopt-OCSVM
Confusion matrix:
Prediction   -1   1
Target             
-1          452  48
 1          237  31
precision: 0.392405063291, recall: 0.115671641791, f1-score: 0.178674351585
Number of support vectors: 6
---------
3) sklearn-OCSVM
Confusion matrix:
Prediction   -1   1
Target             
-1          450  50
 1          237  31
Number of support vectors: 62
precision: 0.382716049383, recall: 0.115671641791, f1-score: 0.177650429799
========================================
Average Incremental OCSVM results:
precision: 0.385542168675, recall: 0.119402985075, f1-score: 0.182336182336
Average cvxopt-OCSVM results:
precision: 0.392405063291, recall: 0.115671641791, f1-score: 0.178674351585
Average sklearn-OCSVM results:
precision: 0.382716049383, recall: 0.115671641791, f1-score: 0.177650429799

*** PROFILER RESULTS ***
incremental_ocsvm (/Users/LT/Documents/Uni/MA/increOCSVM/evaluation_tmp.py:185)
function called 1 times

         20909 function calls in 0.997 seconds

   Ordered by: cumulative time, internal time, call count
   List reduced from 135 to 40 due to restriction <40>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.001    0.001    0.997    0.997 evaluation_tmp.py:185(incremental_ocsvm)
        1    0.798    0.798    0.981    0.981 ocsvm.py:98(increment)
      730    0.063    0.000    0.063    0.000 {method 'remove' of 'list' objects}
     2569    0.031    0.000    0.031    0.000 {method 'dot' of 'numpy.ndarray' objects}
     2593    0.026    0.000    0.026    0.000 {min}
      446    0.015    0.000    0.019    0.000 numeric.py:966(outer)
      982    0.005    0.000    0.017    0.000 numeric.py:136(ones)
        1    0.000    0.000    0.015    0.015 ocsvm.py:35(fit)
        1    0.000    0.000    0.015    0.015 ocsvm.py:62(alpha)
        1    0.000    0.000    0.014    0.014 coneprog.py:4159(qp)
        1    0.003    0.003    0.014    0.014 coneprog.py:1441(coneqp)
        2    0.000    0.000    0.011    0.005 ocsvm.py:58(gram)
        2    0.000    0.000    0.010    0.005 pairwise.py:1164(pairwise_kernels)
        2    0.000    0.000    0.010    0.005 pairwise.py:949(_parallel_pairwise)
        2    0.004    0.002    0.010    0.005 pairwise.py:740(rbf_kernel)
     1137    0.003    0.000    0.010    0.000 numeric.py:392(asarray)
     1158    0.007    0.000    0.008    0.000 {numpy.core.multiarray.array}
     2565    0.006    0.000    0.006    0.000 {numpy.core.multiarray.where}
        2    0.002    0.001    0.006    0.003 pairwise.py:136(euclidean_distances)
      982    0.006    0.000    0.006    0.000 {numpy.core.multiarray.copyto}
       10    0.000    0.000    0.006    0.001 coneprog.py:1984(kktsolver)
       10    0.002    0.000    0.006    0.001 misc.py:1389(factor)
      985    0.006    0.000    0.006    0.000 {numpy.core.multiarray.empty}
        2    0.000    0.000    0.004    0.002 extmath.py:171(safe_sparse_dot)
        2    0.004    0.002    0.004    0.002 {numpy.core._dotblas.dot}
       10    0.002    0.000    0.002    0.000 {cvxopt.base.syrk}
      656    0.002    0.000    0.002    0.000 {numpy.core.multiarray.zeros}
     1421    0.002    0.000    0.002    0.000 {len}
       19    0.000    0.000    0.001    0.000 misc.py:1489(solve)
      893    0.001    0.000    0.001    0.000 {method 'ravel' of 'numpy.ndarray' objects}
       18    0.000    0.000    0.001    0.000 coneprog.py:2333(f4)
        1    0.001    0.001    0.001    0.001 misc.py:20(<module>)
       18    0.000    0.000    0.001    0.000 coneprog.py:2291(f4_no_ir)
      116    0.001    0.000    0.001    0.000 {cvxopt.base.gemv}
       10    0.001    0.000    0.001    0.000 {cvxopt.base.gemm}
     1964    0.001    0.000    0.001    0.000 {method 'append' of 'list' objects}
        9    0.000    0.000    0.001    0.000 misc.py:422(update_scaling)
       20    0.000    0.000    0.001    0.000 coneprog.py:1900(fG)
        4    0.000    0.000    0.000    0.000 pairwise.py:57(check_pairwise_arrays)
       20    0.000    0.000    0.000    0.000 {cvxopt.lapack.potrf}



*** PROFILER RESULTS ***
cvxopt_ocsvm (/Users/LT/Documents/Uni/MA/increOCSVM/evaluation_tmp.py:181)
function called 1 times

         2210 function calls in 0.983 seconds

   Ordered by: cumulative time, internal time, call count
   List reduced from 117 to 40 due to restriction <40>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.983    0.983 evaluation_tmp.py:181(cvxopt_ocsvm)
        1    0.002    0.002    0.983    0.983 ocsvm.py:35(fit)
        1    0.037    0.037    0.979    0.979 ocsvm.py:62(alpha)
        1    0.001    0.001    0.923    0.923 coneprog.py:4159(qp)
        1    0.004    0.004    0.923    0.923 coneprog.py:1441(coneqp)
       11    0.000    0.000    0.824    0.075 coneprog.py:1984(kktsolver)
       11    0.027    0.002    0.824    0.075 misc.py:1389(factor)
       11    0.328    0.030    0.328    0.030 {cvxopt.base.gemm}
       11    0.326    0.030    0.326    0.030 {cvxopt.base.syrk}
       22    0.131    0.006    0.131    0.006 {cvxopt.lapack.potrf}
      128    0.072    0.001    0.072    0.001 {cvxopt.base.gemv}
       21    0.001    0.000    0.062    0.003 misc.py:1489(solve)
       20    0.000    0.000    0.061    0.003 coneprog.py:2333(f4)
       20    0.000    0.000    0.061    0.003 coneprog.py:2291(f4_no_ir)
       22    0.000    0.000    0.022    0.001 coneprog.py:1900(fG)
       22    0.001    0.000    0.022    0.001 misc.py:801(sgemv)
        2    0.000    0.000    0.012    0.006 ocsvm.py:58(gram)
        2    0.000    0.000    0.012    0.006 pairwise.py:1164(pairwise_kernels)
        2    0.000    0.000    0.012    0.006 pairwise.py:949(_parallel_pairwise)
        2    0.006    0.003    0.012    0.006 pairwise.py:740(rbf_kernel)
       42    0.010    0.000    0.010    0.000 {cvxopt.blas.trsv}
       11    0.010    0.001    0.010    0.001 {cvxopt.blas.trsm}
        2    0.004    0.002    0.006    0.003 pairwise.py:136(euclidean_distances)
        2    0.000    0.000    0.004    0.002 shape_base.py:179(vstack)
        2    0.004    0.002    0.004    0.002 {numpy.core.multiarray.concatenate}
       11    0.000    0.000    0.003    0.000 coneprog.py:1847(fP)
       11    0.003    0.000    0.003    0.000 {cvxopt.base.symv}
        2    0.003    0.001    0.003    0.002 twodim_base.py:221(diag)
       10    0.002    0.000    0.002    0.000 misc.py:422(update_scaling)
        2    0.000    0.000    0.002    0.001 extmath.py:171(safe_sparse_dot)
        2    0.002    0.001    0.002    0.001 {numpy.core._dotblas.dot}
        1    0.000    0.000    0.001    0.001 ocsvm.py:45(rho)
      185    0.001    0.000    0.001    0.000 {cvxopt.blas.axpy}
       76    0.001    0.000    0.001    0.000 {range}
        1    0.000    0.000    0.001    0.001 misc.py:250(compute_scaling)
        2    0.000    0.000    0.001    0.000 data.py:29(Xs)
        4    0.000    0.000    0.001    0.000 pairwise.py:57(check_pairwise_arrays)
       60    0.001    0.000    0.001    0.000 {cvxopt.misc_solvers.scale2}
        2    0.000    0.000    0.001    0.000 data.py:54(get_sv)
       30    0.000    0.000    0.001    0.000 {numpy.core.multiarray.array}



*** PROFILER RESULTS ***
sklearn_ocsvm (/Users/LT/Documents/Uni/MA/increOCSVM/evaluation_tmp.py:177)
function called 1 times

         57 function calls in 0.003 seconds

   Ordered by: cumulative time, internal time, call count

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.003    0.003 evaluation_tmp.py:177(sklearn_ocsvm)
        1    0.000    0.000    0.003    0.003 classes.py:941(fit)
        1    0.000    0.000    0.003    0.003 base.py:99(fit)
        1    0.000    0.000    0.003    0.003 base.py:211(_dense_fit)
        1    0.003    0.003    0.003    0.003 {sklearn.svm.libsvm.fit}
        1    0.000    0.000    0.000    0.000 validation.py:268(check_array)
        1    0.000    0.000    0.000    0.000 validation.py:43(_assert_all_finite)
        1    0.000    0.000    0.000    0.000 validation.py:126(_shape_repr)
        1    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 _methods.py:23(_sum)
        1    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 {method 'randint' of 'mtrand.RandomState' objects}
        1    0.000    0.000    0.000    0.000 numeric.py:136(ones)
        1    0.000    0.000    0.000    0.000 base.py:193(_validate_targets)
        5    0.000    0.000    0.000    0.000 {numpy.core.multiarray.array}
        1    0.000    0.000    0.000    0.000 shape_base.py:60(atleast_2d)
        3    0.000    0.000    0.000    0.000 validation.py:153(<genexpr>)
        2    0.000    0.000    0.000    0.000 numeric.py:392(asarray)
        1    0.000    0.000    0.000    0.000 getlimits.py:244(__init__)
        2    0.000    0.000    0.000    0.000 {numpy.core.multiarray.empty}
        1    0.000    0.000    0.000    0.000 validation.py:105(_num_samples)
        1    0.000    0.000    0.000    0.000 {sklearn.svm.libsvm.set_verbosity_wrap}
        1    0.000    0.000    0.000    0.000 {numpy.core.multiarray.copyto}
        2    0.000    0.000    0.000    0.000 base.py:702(isspmatrix)
        2    0.000    0.000    0.000    0.000 numeric.py:462(asanyarray)
        3    0.000    0.000    0.000    0.000 {hasattr}
        3    0.000    0.000    0.000    0.000 {isinstance}
        1    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 getlimits.py:269(max)
        1    0.000    0.000    0.000    0.000 validation.py:503(check_random_state)
        1    0.000    0.000    0.000    0.000 base.py:203(_warn_from_fit_status)
        1    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
        6    0.000    0.000    0.000    0.000 {len}
        2    0.000    0.000    0.000    0.000 {callable}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        0    0.000             0.000          profile:0(profiler)



Process finished with exit code 0
